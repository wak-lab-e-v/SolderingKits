Detailgrad = 24; 
$fn=Detailgrad; 
holewithorigin=false; 
EnableVias=true; 
EnableParts=true; 
EnableWires=true;   // Disable for smaler export file
EnablePolygones=true;  // Disable for smaler export file
HideAutogeneratedParts=true;  // Disable yellow boxes
EnableSoldermask=false;  // Disable for smaler export file
Package_path = "C:/DEVELOP/Eagle.Bibliotheken/ulp/";
module SimpleLedEgg(){
	board_thickness = 1.600;
	eta = 0.2;
	board_size = [40.577,54.786];
	board_origin = [0,0];
	board_polygons = [[[0.944,26.864],[1.610,30.475],[2.409,33.833],[3.329,36.939],[4.363,39.793],[5.501,42.397],[6.733,44.749],[8.050,46.851],[9.442,48.703],[10.900,50.305],[12.415,51.658],[13.977,52.762],[15.577,53.617],[17.205,54.224],[18.852,54.583],[20.509,54.694],[22.165,54.558],[23.813,54.175],[25.442,53.546],[27.042,52.671],[28.605,51.550],[30.121,50.183],[31.581,48.571],[32.975,46.715],[34.293,44.614],[35.527,42.270],[36.667,39.682],[37.703,36.850],[38.626,33.776],[39.428,30.459],[40.097,26.900],[40.625,23.099],[40.816,20.287],[40.727,17.657],[40.377,15.209],[39.785,12.943],[38.970,10.859],[37.949,8.957],[36.742,7.236],[35.368,5.696],[33.844,4.339],[32.190,3.162],[30.423,2.167],[28.564,1.353],[26.629,0.720],[24.639,0.269],[22.611,-0.002],[20.564,-0.092],[18.517,-0.001],[16.488,0.270],[14.495,0.723],[12.559,1.355],[10.696,2.169],[8.926,3.162],[7.268,4.336],[5.739,5.691],[4.359,7.225],[3.146,8.939],[2.119,10.833],[1.296,12.908],[0.696,15.162],[0.337,17.595],[0.239,20.209],[0.419,23.002]]];
	translate([0,0,0]) union()   // PCB whith parts and text
	{
		color("#265004")linear_extrude(height=board_thickness,center=false, convexity=10)
		union()  // PCB 
		{
			difference() // PCB and holes 
			{
				translate(board_origin)  polygon(points = board_polygons[0]); //Board
				if (Detailgrad > 9) // Drill part holes 
				{
					translate([3.591,17.976])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([6.131,17.976])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([5.397,31.115])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([7.938,31.115])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([7.899,41.257])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([10.439,41.257])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([12.700,23.178])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([15.240,23.178])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([13.018,48.895])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([15.558,48.895])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([9.843,5.397])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([12.383,5.397])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([34.925,18.098])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([37.465,18.098])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([28.893,5.397])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([31.433,5.397])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([19.685,4.763])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([22.225,4.763])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([19.072,39.602])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([21.611,39.602])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([25.088,48.919])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([27.629,48.919])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([28.258,23.495])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([30.798,23.495])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([31.096,41.275])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([33.636,41.275])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([33.973,31.750])circle(r=0.406,$fn=$fn); //LED3MM A
					translate([36.513,31.750])circle(r=0.406,$fn=$fn); //LED3MM K
					translate([11.430,44.768])circle(r=0.406,$fn=$fn); //SIL8 1
					translate([13.970,44.768])circle(r=0.406,$fn=$fn); //SIL8 2
					translate([16.510,44.768])circle(r=0.406,$fn=$fn); //SIL8 3
					translate([19.050,44.768])circle(r=0.406,$fn=$fn); //SIL8 4
					translate([21.590,44.768])circle(r=0.406,$fn=$fn); //SIL8 5
					translate([24.130,44.768])circle(r=0.406,$fn=$fn); //SIL8 6
					translate([26.670,44.768])circle(r=0.406,$fn=$fn); //SIL8 7
					translate([29.210,44.768])circle(r=0.406,$fn=$fn); //SIL8 8
					translate([11.748,34.290])circle(r=0.406,$fn=$fn); //SIL8 1
					translate([14.288,34.290])circle(r=0.406,$fn=$fn); //SIL8 2
					translate([16.828,34.290])circle(r=0.406,$fn=$fn); //SIL8 3
					translate([19.367,34.290])circle(r=0.406,$fn=$fn); //SIL8 4
					translate([21.908,34.290])circle(r=0.406,$fn=$fn); //SIL8 5
					translate([24.448,34.290])circle(r=0.406,$fn=$fn); //SIL8 6
					translate([26.988,34.290])circle(r=0.406,$fn=$fn); //SIL8 7
					translate([29.527,34.290])circle(r=0.406,$fn=$fn); //SIL8 8
				} // end Drill part holes
			} //end difference() PCB and holes 
			if (holewithorigin) 
			{
				//Print a little cross in the PCB holes 
			}
		} //end union() // PCB 
		if (Detailgrad > 10) color("#DFDDE0",1) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.040,center=false, convexity=10) difference()  { 
	  union() { 
					translate([3.591,17.976]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([6.131,17.976]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([5.397,31.115]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([7.938,31.115]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([7.899,41.257]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([10.439,41.257]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([12.700,23.178]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([15.240,23.178]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([13.018,48.895]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([15.558,48.895]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([9.843,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([12.383,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([34.925,18.098]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([37.465,18.098]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([28.893,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([31.433,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([19.685,4.763]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([22.225,4.763]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([19.072,39.602]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([21.611,39.602]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([25.088,48.919]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([27.629,48.919]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([28.258,23.495]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([30.798,23.495]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([31.096,41.275]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([33.636,41.275]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([33.973,31.750]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([36.513,31.750]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([11.430,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 1
			translate([13.970,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 2
			translate([16.510,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 3
			translate([19.050,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 4
			translate([21.590,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 5
			translate([24.130,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 6
			translate([26.670,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 7
			translate([29.210,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 8
			translate([11.748,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 1
			translate([14.288,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 2
			translate([16.828,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 3
			translate([19.367,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 4
			translate([21.908,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 5
			translate([24.448,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 6
			translate([26.988,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 7
			translate([29.527,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 8
		}
			translate([3.591,17.976]) circle(r=0.406,$fn=$fn);
			translate([6.131,17.976]) circle(r=0.406,$fn=$fn);
			translate([5.397,31.115]) circle(r=0.406,$fn=$fn);
			translate([7.938,31.115]) circle(r=0.406,$fn=$fn);
			translate([7.899,41.257]) circle(r=0.406,$fn=$fn);
			translate([10.439,41.257]) circle(r=0.406,$fn=$fn);
			translate([12.700,23.178]) circle(r=0.406,$fn=$fn);
			translate([15.240,23.178]) circle(r=0.406,$fn=$fn);
			translate([13.018,48.895]) circle(r=0.406,$fn=$fn);
			translate([15.558,48.895]) circle(r=0.406,$fn=$fn);
			translate([9.843,5.397]) circle(r=0.406,$fn=$fn);
			translate([12.383,5.397]) circle(r=0.406,$fn=$fn);
			translate([34.925,18.098]) circle(r=0.406,$fn=$fn);
			translate([37.465,18.098]) circle(r=0.406,$fn=$fn);
			translate([28.893,5.397]) circle(r=0.406,$fn=$fn);
			translate([31.433,5.397]) circle(r=0.406,$fn=$fn);
			translate([19.685,4.763]) circle(r=0.406,$fn=$fn);
			translate([22.225,4.763]) circle(r=0.406,$fn=$fn);
			translate([19.072,39.602]) circle(r=0.406,$fn=$fn);
			translate([21.611,39.602]) circle(r=0.406,$fn=$fn);
			translate([25.088,48.919]) circle(r=0.406,$fn=$fn);
			translate([27.629,48.919]) circle(r=0.406,$fn=$fn);
			translate([28.258,23.495]) circle(r=0.406,$fn=$fn);
			translate([30.798,23.495]) circle(r=0.406,$fn=$fn);
			translate([31.096,41.275]) circle(r=0.406,$fn=$fn);
			translate([33.636,41.275]) circle(r=0.406,$fn=$fn);
			translate([33.973,31.750]) circle(r=0.406,$fn=$fn);
			translate([36.513,31.750]) circle(r=0.406,$fn=$fn);
			translate([11.430,44.768]) circle(r=0.406,$fn=$fn);
			translate([13.970,44.768]) circle(r=0.406,$fn=$fn);
			translate([16.510,44.768]) circle(r=0.406,$fn=$fn);
			translate([19.050,44.768]) circle(r=0.406,$fn=$fn);
			translate([21.590,44.768]) circle(r=0.406,$fn=$fn);
			translate([24.130,44.768]) circle(r=0.406,$fn=$fn);
			translate([26.670,44.768]) circle(r=0.406,$fn=$fn);
			translate([29.210,44.768]) circle(r=0.406,$fn=$fn);
			translate([11.748,34.290]) circle(r=0.406,$fn=$fn);
			translate([14.288,34.290]) circle(r=0.406,$fn=$fn);
			translate([16.828,34.290]) circle(r=0.406,$fn=$fn);
			translate([19.367,34.290]) circle(r=0.406,$fn=$fn);
			translate([21.908,34.290]) circle(r=0.406,$fn=$fn);
			translate([24.448,34.290]) circle(r=0.406,$fn=$fn);
			translate([26.988,34.290]) circle(r=0.406,$fn=$fn);
			translate([29.527,34.290]) circle(r=0.406,$fn=$fn);

		}
		if (EnableWires && (Detailgrad > 12)) color("#7C770F",1) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) difference()  { 
	  union() { 
				}

		}
			if (EnablePolygones) {
					L21_polygons1 = [[[2.337,24.398],[3.093,24.813],[3.868,25.267],[4.667,25.770],[5.496,26.329],[6.357,26.956],[7.257,27.659],[7.672,25.886],[8.118,24.140],[8.599,22.426],[9.123,20.751],[9.696,19.119],[10.323,17.537],[11.012,16.010],[11.767,14.543],[13.387,15.761],[14.864,17.015],[16.220,18.299],[17.477,19.608],[18.660,20.935],[19.789,22.276],[20.887,23.625],[21.978,24.975],[23.032,23.550],[24.129,22.162],[25.264,20.807],[26.436,19.483],[27.643,18.189],[28.881,16.922],[30.148,15.679],[31.441,14.460],[32.040,16.028],[32.640,17.596],[33.227,19.181],[33.789,20.800],[34.313,22.470],[34.788,24.209],[35.200,26.035],[35.537,27.963],[36.104,27.562],[36.671,27.161],[37.238,26.760],[37.806,26.359],[38.373,25.957],[38.940,25.556],[39.508,25.155],[40.075,24.754],[40.102,24.269],[40.130,23.785],[40.158,23.301],[40.185,22.817],[40.213,22.332],[40.241,21.848],[40.268,21.364],[40.296,20.880],[39.985,21.066],[39.674,21.253],[39.362,21.440],[39.051,21.627],[38.740,21.814],[38.428,22.000],[38.117,22.187],[37.806,22.374],[37.316,20.346],[36.768,18.473],[36.172,16.726],[35.539,15.081],[34.878,13.510],[34.198,11.987],[33.511,10.486],[32.825,8.981],[31.300,10.119],[29.834,11.317],[28.424,12.570],[27.066,13.876],[25.757,15.230],[24.494,16.630],[23.272,18.072],[22.089,19.551],[20.743,18.067],[19.370,16.632],[17.970,15.249],[16.540,13.919],[15.081,12.642],[13.592,11.421],[12.073,10.255],[10.522,9.147],[9.730,10.633],[8.976,12.142],[8.260,13.682],[7.582,15.263],[6.944,16.892],[6.344,18.578],[5.783,20.328],[5.262,22.153],[4.688,21.841],[4.114,21.530],[3.540,21.219],[2.967,20.907],[2.393,20.596],[1.819,20.285],[1.245,19.973],[0.671,19.662],[0.695,20.160],[0.720,20.658],[0.744,21.156],[0.768,21.654],[0.792,22.153],[0.816,22.651],[0.841,23.149],[0.865,23.647],[1.596,24.012]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons1)-1]) polygon(L21_polygons1[a]);
					L21_polygons2 = [[[3.184,36.308],[3.297,36.602],[3.407,36.880],[3.514,37.141],[3.617,37.386],[3.716,37.617],[3.810,37.833],[3.900,38.036],[3.984,38.227],[4.063,38.406],[4.135,38.573],[4.202,38.730],[4.261,38.878],[4.314,39.016],[4.359,39.147],[6.366,38.418],[8.370,37.789],[10.371,37.258],[12.370,36.825],[14.368,36.491],[16.366,36.255],[18.364,36.117],[20.364,36.077],[22.367,36.135],[24.373,36.291],[26.383,36.543],[28.398,36.894],[30.419,37.341],[32.447,37.885],[34.482,38.526],[36.526,39.264],[36.643,39.049],[36.756,38.839],[36.865,38.632],[36.969,38.430],[37.070,38.231],[37.166,38.037],[37.259,37.847],[37.348,37.660],[37.433,37.477],[37.514,37.298],[37.593,37.122],[37.667,36.949],[37.739,36.780],[37.807,36.614],[37.873,36.450],[37.935,36.290],[35.744,35.374],[33.555,34.570],[31.368,33.878],[29.181,33.299],[26.996,32.835],[24.811,32.488],[22.627,32.258],[20.442,32.146],[18.258,32.154],[16.074,32.283],[13.889,32.534],[11.704,32.908],[9.517,33.407],[7.330,34.032],[5.141,34.784],[2.950,35.664],[3.068,35.995]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons2)-1]) polygon(L21_polygons2[a]);
					L21_polygons3 = [[[10.077,43.873],[11.559,43.506],[13.072,43.184],[14.618,42.911],[16.196,42.694],[17.806,42.537],[19.448,42.445],[21.122,42.425],[22.828,42.480],[24.565,42.616],[26.335,42.839],[28.136,43.153],[29.970,43.564],[31.835,44.077],[33.732,44.697],[33.683,44.808],[33.616,44.928],[33.535,45.056],[33.440,45.192],[33.335,45.334],[33.221,45.482],[33.100,45.635],[32.975,45.793],[32.847,45.953],[32.719,46.115],[32.593,46.279],[32.471,46.444],[32.355,46.608],[32.248,46.772],[32.150,46.933],[32.065,47.091],[30.537,46.543],[29.021,46.083],[27.515,45.709],[26.020,45.415],[24.535,45.200],[23.059,45.060],[21.592,44.992],[20.134,44.992],[18.683,45.056],[17.239,45.182],[15.802,45.366],[14.372,45.605],[12.947,45.896],[11.527,46.234],[10.112,46.617],[8.701,47.042],[8.607,46.897],[8.514,46.752],[8.421,46.607],[8.328,46.462],[8.235,46.317],[8.141,46.172],[8.048,46.027],[7.955,45.882],[7.862,45.737],[7.768,45.592],[7.675,45.447],[7.489,45.157],[7.395,45.012],[7.302,44.867],[7.209,44.722],[8.627,44.280]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons3)-1]) polygon(L21_polygons3[a]);
					L21_polygons4 = [[[28.612,24.257],[29.128,24.536],[29.717,24.620],[30.304,24.514],[30.813,24.220],[31.168,23.742],[31.296,23.083],[31.148,22.426],[30.780,21.952],[30.266,21.665],[29.679,21.566],[29.095,21.658],[28.588,21.944],[28.231,22.424],[28.101,23.103],[28.244,23.780]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons4)-1]) polygon(L21_polygons4[a]);
					L21_polygons5 = [[[1.916,29.191],[2.043,28.532],[1.896,27.874],[1.528,27.401],[1.013,27.113],[1.560,29.669]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons5)-1]) polygon(L21_polygons5[a]);
					L21_polygons6 = [[[8.167,7.036],[10.382,6.436],[12.591,5.957],[14.790,5.595],[16.976,5.349],[19.147,5.216],[21.299,5.193],[23.428,5.279],[25.533,5.472],[27.610,5.769],[29.655,6.167],[31.666,6.666],[33.639,7.261],[35.572,7.952],[37.461,8.736],[37.210,8.408],[36.959,8.081],[36.706,7.754],[36.446,7.426],[36.178,7.096],[35.897,6.765],[35.600,6.430],[35.284,6.093],[34.945,5.751],[34.581,5.404],[34.188,5.052],[33.763,4.693],[33.302,4.328],[32.803,3.955],[32.261,3.574],[31.674,3.184],[30.270,2.789],[28.862,2.454],[27.452,2.177],[26.040,1.957],[24.628,1.793],[23.217,1.683],[21.808,1.626],[20.403,1.620],[19.003,1.664],[17.610,1.757],[16.223,1.898],[14.845,2.084],[13.477,2.315],[12.121,2.589],[10.777,2.905],[9.446,3.262],[9.033,3.522],[8.625,3.792],[8.223,4.072],[7.827,4.362],[7.438,4.662],[7.056,4.972],[6.682,5.292],[6.316,5.622],[5.959,5.961],[5.610,6.310],[5.271,6.668],[4.941,7.036],[4.622,7.414],[4.313,7.800],[4.016,8.197],[3.730,8.603],[5.949,7.757]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons6)-1]) polygon(L21_polygons6[a]);
																																	L21_polygons14 = [[[38.455,16.002],[38.971,16.281],[39.559,16.365],[40.147,16.259],[39.522,13.311],[38.938,13.403],[38.431,13.689],[38.074,14.169],[37.944,14.848],[38.087,15.525]]];
				translate(board_origin) color("white",0.7) translate([0,0,board_thickness-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L21_polygons14)-1]) polygon(L21_polygons14[a]);
			}
		if (Detailgrad > 10) color("#DFDDE0",1) translate([0,0,-0.022]) linear_extrude(height=0.040,center=false, convexity=10) difference()  { 
	  union() { 
					translate([35.242,14.288]) rotate([0,0,90.000]) square([3.600,2.600], center = true); //CR2032H_SMD +
			translate([5.397,14.288]) rotate([0,0,90.000]) square([3.600,2.600], center = true); //CR2032H_SMD -
			translate([3.591,17.976]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([6.131,17.976]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([5.397,31.115]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([7.938,31.115]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([7.899,41.257]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([10.439,41.257]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([12.700,23.178]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([15.240,23.178]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([13.018,48.895]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([15.558,48.895]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([9.843,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([12.383,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([34.925,18.098]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([37.465,18.098]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([28.893,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([31.433,5.397]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([19.685,4.763]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([22.225,4.763]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([19.072,39.602]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([21.611,39.602]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([25.088,48.919]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([27.629,48.919]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([28.258,23.495]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([30.798,23.495]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([31.096,41.275]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([33.636,41.275]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([33.973,31.750]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([36.513,31.750]) rotate([0,0,22.500]) circle(r=0.715,$fn=8);
			translate([11.430,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 1
			translate([13.970,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 2
			translate([16.510,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 3
			translate([19.050,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 4
			translate([21.590,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 5
			translate([24.130,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 6
			translate([26.670,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 7
			translate([29.210,44.768]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 8
			translate([11.748,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 1
			translate([14.288,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 2
			translate([16.828,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 3
			translate([19.367,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 4
			translate([21.908,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 5
			translate([24.448,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 6
			translate([26.988,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 7
			translate([29.527,34.290]) rotate([0,0,180.000]) EaglePad([1.321,2.642], 100); //SIL8 8
			translate([31.238,28.258]) rotate([0,0,180.000]) square([5.080,2.540], center = true); //BTSW_SMD 1
			translate([10.037,28.258]) rotate([0,0,180.000]) square([5.080,2.540], center = true); //BTSW_SMD 2
		}
			translate([3.591,17.976]) circle(r=0.406,$fn=$fn);
			translate([6.131,17.976]) circle(r=0.406,$fn=$fn);
			translate([5.397,31.115]) circle(r=0.406,$fn=$fn);
			translate([7.938,31.115]) circle(r=0.406,$fn=$fn);
			translate([7.899,41.257]) circle(r=0.406,$fn=$fn);
			translate([10.439,41.257]) circle(r=0.406,$fn=$fn);
			translate([12.700,23.178]) circle(r=0.406,$fn=$fn);
			translate([15.240,23.178]) circle(r=0.406,$fn=$fn);
			translate([13.018,48.895]) circle(r=0.406,$fn=$fn);
			translate([15.558,48.895]) circle(r=0.406,$fn=$fn);
			translate([9.843,5.397]) circle(r=0.406,$fn=$fn);
			translate([12.383,5.397]) circle(r=0.406,$fn=$fn);
			translate([34.925,18.098]) circle(r=0.406,$fn=$fn);
			translate([37.465,18.098]) circle(r=0.406,$fn=$fn);
			translate([28.893,5.397]) circle(r=0.406,$fn=$fn);
			translate([31.433,5.397]) circle(r=0.406,$fn=$fn);
			translate([19.685,4.763]) circle(r=0.406,$fn=$fn);
			translate([22.225,4.763]) circle(r=0.406,$fn=$fn);
			translate([19.072,39.602]) circle(r=0.406,$fn=$fn);
			translate([21.611,39.602]) circle(r=0.406,$fn=$fn);
			translate([25.088,48.919]) circle(r=0.406,$fn=$fn);
			translate([27.629,48.919]) circle(r=0.406,$fn=$fn);
			translate([28.258,23.495]) circle(r=0.406,$fn=$fn);
			translate([30.798,23.495]) circle(r=0.406,$fn=$fn);
			translate([31.096,41.275]) circle(r=0.406,$fn=$fn);
			translate([33.636,41.275]) circle(r=0.406,$fn=$fn);
			translate([33.973,31.750]) circle(r=0.406,$fn=$fn);
			translate([36.513,31.750]) circle(r=0.406,$fn=$fn);
			translate([11.430,44.768]) circle(r=0.406,$fn=$fn);
			translate([13.970,44.768]) circle(r=0.406,$fn=$fn);
			translate([16.510,44.768]) circle(r=0.406,$fn=$fn);
			translate([19.050,44.768]) circle(r=0.406,$fn=$fn);
			translate([21.590,44.768]) circle(r=0.406,$fn=$fn);
			translate([24.130,44.768]) circle(r=0.406,$fn=$fn);
			translate([26.670,44.768]) circle(r=0.406,$fn=$fn);
			translate([29.210,44.768]) circle(r=0.406,$fn=$fn);
			translate([11.748,34.290]) circle(r=0.406,$fn=$fn);
			translate([14.288,34.290]) circle(r=0.406,$fn=$fn);
			translate([16.828,34.290]) circle(r=0.406,$fn=$fn);
			translate([19.367,34.290]) circle(r=0.406,$fn=$fn);
			translate([21.908,34.290]) circle(r=0.406,$fn=$fn);
			translate([24.448,34.290]) circle(r=0.406,$fn=$fn);
			translate([26.988,34.290]) circle(r=0.406,$fn=$fn);
			translate([29.527,34.290]) circle(r=0.406,$fn=$fn);

		}
		if (EnableWires && (Detailgrad > 12)) color("#7C770F",1) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) difference()  { 
	  union() { 
				}

		}
			if (EnablePolygones) {
																													L22_polygons21 = [[[17.168,50.559],[17.208,50.611],[17.243,50.678],[17.285,50.838],[17.267,50.992],[17.194,51.128],[17.072,51.226],[17.004,51.256],[16.932,51.274],[16.830,51.285],[16.675,51.290],[16.512,51.296],[16.418,51.303],[16.415,51.043],[16.635,51.033],[16.735,51.013],[16.805,50.973],[16.835,50.922],[16.835,50.852],[16.815,50.793],[16.775,50.753],[16.695,50.733],[16.595,50.742],[16.525,50.773],[16.465,50.823],[16.405,50.933],[16.395,51.033],[16.399,51.320],[16.402,51.346],[16.411,51.370],[16.428,51.396],[16.448,51.422],[16.471,51.446],[16.506,51.471],[16.549,51.486],[16.614,51.494],[16.715,51.495],[16.808,51.492],[16.888,51.483],[16.958,51.471],[17.022,51.450],[17.069,51.433],[17.110,51.418],[17.141,51.409],[17.157,51.404],[17.163,51.416],[17.169,51.453],[17.172,51.506],[17.173,51.570],[17.173,51.736],[16.989,51.764],[16.898,51.774],[16.789,51.781],[16.675,51.785],[16.569,51.784],[16.385,51.767],[16.243,51.730],[16.136,51.672],[16.059,51.588],[16.010,51.495],[15.981,51.375],[15.967,51.192],[15.964,50.908],[15.964,50.465],[16.390,50.465],[16.390,50.631],[16.420,50.601],[16.436,50.587],[16.451,50.572],[16.482,50.546],[16.519,50.520],[16.559,50.495],[16.596,50.477],[16.701,50.453],[16.831,50.445],[16.958,50.454],[17.050,50.479],[17.117,50.517]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons21)-1]) polygon(L22_polygons21[a]);
					L22_polygons22 = [[[15.052,50.518],[15.082,50.541],[15.107,50.561],[15.120,50.573],[15.132,50.584],[15.145,50.596],[15.157,50.607],[15.157,50.466],[15.605,50.466],[15.605,52.258],[15.157,52.258],[15.157,51.631],[15.155,51.242],[15.155,51.043],[15.125,50.903],[15.065,50.813],[14.955,50.763],[14.865,50.753],[14.785,50.773],[14.715,50.833],[14.675,50.913],[14.655,50.992],[14.645,51.063],[14.645,51.163],[14.665,51.283],[14.715,51.383],[14.765,51.433],[14.815,51.463],[14.855,51.473],[14.915,51.473],[14.975,51.463],[15.035,51.433],[15.095,51.383],[15.135,51.303],[15.132,51.649],[15.106,51.666],[15.081,51.684],[15.055,51.703],[14.996,51.741],[14.942,51.764],[14.877,51.777],[14.787,51.784],[14.643,51.779],[14.525,51.745],[14.426,51.684],[14.339,51.588],[14.215,51.294],[14.209,50.970],[14.312,50.681],[14.513,50.491],[14.625,50.456],[14.758,50.443],[14.889,50.451],[14.989,50.480],[14.989,50.480],[15.019,50.497]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons22)-1]) polygon(L22_polygons22[a]);
					L22_polygons23 = [[[25.518,51.340],[25.649,51.904],[25.708,52.169],[25.691,52.177],[25.643,52.183],[25.573,52.187],[25.488,52.188],[25.268,52.188],[25.253,52.122],[25.237,52.056],[25.222,51.991],[25.206,51.925],[25.176,51.796],[25.139,51.640],[25.100,51.477],[25.064,51.326],[24.984,50.989],[24.950,51.138],[24.915,51.287],[24.880,51.434],[24.846,51.583],[24.811,51.732],[24.777,51.880],[24.742,52.029],[24.707,52.177],[24.651,52.178],[24.537,52.180],[24.481,52.181],[24.367,52.183],[24.254,52.184],[24.249,52.163],[24.243,52.143],[24.238,52.120],[24.232,52.099],[24.214,52.027],[24.182,51.890],[24.140,51.709],[24.092,51.503],[24.062,51.375],[24.033,51.247],[23.973,50.991],[23.958,51.052],[23.943,51.111],[23.913,51.233],[23.883,51.357],[23.847,51.510],[23.807,51.674],[23.770,51.831],[23.750,51.919],[23.708,52.095],[23.688,52.183],[23.239,52.183],[23.247,52.153],[23.251,52.137],[23.255,52.122],[23.275,52.038],[23.318,51.855],[23.378,51.599],[23.448,51.299],[23.518,51.000],[23.577,50.748],[23.620,50.573],[23.638,50.498],[23.653,50.477],[23.694,50.465],[23.776,50.459],[23.918,50.458],[24.021,50.459],[24.106,50.460],[24.164,50.463],[24.185,50.467],[24.228,50.658],[24.322,51.056],[24.420,51.456],[24.471,51.651],[24.487,51.627],[24.520,51.519],[24.569,51.334],[24.631,51.074],[24.775,50.458],[25.041,50.458],[25.164,50.459],[25.248,50.464],[25.297,50.473],[25.316,50.486],[25.316,50.492],[25.384,50.772]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons23)-1]) polygon(L22_polygons23[a]);
					L22_polygons24 = [[[22.668,52.160],[22.662,52.175],[22.657,52.191],[22.097,52.183],[22.022,51.980],[21.948,51.780],[21.874,51.578],[21.800,51.377],[21.683,51.059],[21.585,50.791],[21.517,50.602],[21.487,50.520],[21.482,50.491],[21.503,50.476],[21.572,50.470],[21.707,50.469],[21.942,50.469],[21.955,50.508],[21.967,50.547],[21.993,50.626],[22.005,50.665],[22.018,50.705],[22.031,50.744],[22.043,50.783],[22.662,50.782],[22.666,50.787],[22.565,51.102],[22.095,51.102],[22.385,51.733],[22.696,50.768],[22.718,50.755],[22.725,50.733],[22.810,50.502],[22.822,50.469],[23.285,50.470],[23.278,50.508],[22.673,52.144]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons24)-1]) polygon(L22_polygons24[a]);
					L22_polygons25 = [[[20.802,52.190],[20.802,51.596],[20.357,52.041],[20.282,52.116],[20.208,52.190],[19.649,52.190],[20.466,51.373],[19.559,50.465],[20.163,50.465],[20.243,50.544],[20.722,51.023],[20.802,51.102],[20.802,50.465],[21.273,50.465],[21.273,52.190]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons25)-1]) polygon(L22_polygons25[a]);
					L22_polygons26 = [[[18.204,52.190],[18.204,50.800],[17.420,50.800],[17.420,50.465],[18.674,50.465],[18.674,52.190]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons26)-1]) polygon(L22_polygons26[a]);
					L22_polygons27 = [[[19.010,51.316],[19.010,50.980],[19.750,50.980],[19.750,51.316]]];
				translate(board_origin) color("white",0.7) translate([0,0,-0.017]) linear_extrude(height=0.035,center=false, convexity=10) for (a = [0 : len(L22_polygons27)-1]) polygon(L22_polygons27[a]);
							}
		if(EnableParts) union() // parts 
		{
			translate([20.320,14.288,0])rotate([180,0,180])CR2032H_SMD(Name="G1",Value="CR2032H_SMD",Library="battery"); 
			translate([4.861,17.976,board_thickness])LED3MM(Name="LED1",Value="white",Library="led"); 
			translate([6.668,31.115,board_thickness])LED3MM(Name="LED3",Value="blue",Library="led"); 
			translate([9.169,41.257,board_thickness])LED3MM(Name="LED4",Value="Lime",Library="led"); 
			translate([13.970,23.178,board_thickness])LED3MM(Name="LED6",Value="white",Library="led"); 
			translate([14.288,48.895,board_thickness])LED3MM(Name="LED7",Value="Red",Library="led"); 
			translate([11.113,5.397,board_thickness])LED3MM(Name="LED8",Value="Red",Library="led"); 
			translate([36.195,18.098,board_thickness])LED3MM(Name="LED11",Value="white",Library="led"); 
			translate([30.163,5.397,board_thickness])LED3MM(Name="LED12",Value="blue",Library="led"); 
			translate([20.955,4.763,board_thickness])LED3MM(Name="LED14",Value="Red",Library="led"); 
			translate([20.341,39.602,board_thickness])LED3MM(Name="LED15",Value="Lime",Library="led"); 
			translate([26.359,48.919,board_thickness])LED3MM(Name="LED16",Value="Red",Library="led"); 
			translate([29.527,23.495,board_thickness])LED3MM(Name="LED17",Value="white",Library="led"); 
			translate([32.366,41.275,board_thickness])LED3MM(Name="LED19",Value="Lime",Library="led"); 
			translate([35.242,31.750,board_thickness])LED3MM(Name="LED20",Value="blue",Library="led"); 
			translate([20.320,44.768,board_thickness])SIL8(Name="RN1",Value="",Library="resistor-sil"); 
			translate([20.637,34.290,board_thickness])SIL8(Name="RN2",Value="",Library="resistor-sil"); 
			translate([20.637,28.258,0])rotate([180,0,180])BTSW_SMD(Name="S1",Value="BTSWSMD",Library="DIY-Parts"); 
		} //endunion() 
	} // // PCB whith parts and text  
	module CR2032H_SMD(Name="",Value="",Library="battery")
	{
		// X1=-14.200, Y1=-8.000, X2=14.100, Y2=8.000, Ex=20.320, Ey=14.288, a=180
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			translate([-14.100,-8.000,0]) linear_extrude(10) square([28.300,16.000]); //Dummy Package
		}
	}
	module LED3MM(Name="",Value="",Library="led")
	{
		// X1=-2.032, Y1=-2.032, X2=1.575, Y2=2.032, Ex=4.861, Ey=17.976, a=
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			translate([-2.032,-2.032,0]) linear_extrude(10) square([3.607,4.064]); //Dummy Package
		}
	}
	module SIL8(Name="",Value="",Library="resistor-sil")
	{
		// X1=-10.160, Y1=-1.016, X2=10.160, Y2=1.016, Ex=20.320, Ey=44.768, a=
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			translate([-10.160,-1.016,0]) linear_extrude(10) square([20.320,2.032]); //Dummy Package
		}
	}
	module BTSW_SMD(Name="",Value="",Library="DIY-Parts")
	{
		// X1=-13.100, Y1=-4.000, X2=13.100, Y2=4.000, Ex=20.637, Ey=28.258, a=180
		if (HideAutogeneratedParts) {
			InvisiblePart(); } 
		else {
			translate([-13.100,-4.000,0]) linear_extrude(10) square([26.200,8.000]); //Dummy Package
		}
	}
	include <C:\DEVELOP\Eagle.Bibliotheken\ulp\packages.scad>;

	include <packages.scad>;

} // end module

module InvisiblePart() { rotate([0,0,0]);}

 
module EaglePad(size,roundness,$fn=$fn) 
{
 	function bogen(point=[0,0], r = 1 ,phase = 0, winkel = 90, $fn=$fn) = [let(num=abs($fn*winkel/360)) for (i=[0:num], x=i*winkel/num) [point[0]+r*cos(x+phase),point[1]+r*sin(x+phase)]]; 
	r = ((size[0] < size[1]) ? size[0] / 2: size[1] / 2) * roundness / 100;
	dim = [size[0] / 2 - r, size[1] / 2 - r];
	if ((size[0] == size[1]) && (roundness == 100))
	{
		circle(r);
	}
	else
	{
		polygon(concat(bogen(point=[-dim[0],-dim[1]], r = r, phase = 180, $fn=$fn ), bogen(point=[dim[0],-dim[1]], r = r, phase = 270, $fn=$fn ), bogen(point=[dim[0],dim[1]], r = r, phase = 0, $fn=$fn ), bogen(point=[-dim[0],dim[1]], r = r, phase = 90, $fn=$fn )));
	}
}
SimpleLedEgg(); //Show module
//Created by generate-scad.ulp version 1.6
